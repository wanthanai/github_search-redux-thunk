{"version":3,"sources":["UserInfo.js","App.js","actions/index.js","reducers/index.js","index.js"],"names":["UserInfo","props","className","src","user","avatar_url","alt","name","bio","location","followers","following","connect","state","data","getUsername","onSubmit","e","preventDefault","username","value","dispatch","replace","store","type","getState","fetch","then","json","message","Error","setTimeout","receive_post","catch","err","thunk_action_creator","console","log","placeholder","required","ref","input","isFetching","isError","receiveData","userData","initialstate","asyncReducer","action","Object","assign","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":";mOAoCeA,EApCE,SAACC,GAId,OACI,sBAAKC,UAAU,YAAf,UACI,qBAAKA,UAAU,SAAf,SACI,qBAAKC,IAAKF,EAAMG,KAAKC,WAAYC,IAAI,aAEzC,sBAAKJ,UAAU,UAAf,UACI,6BAAKD,EAAMG,KAAKG,OAChB,4BACI,0CACKN,EAAMG,KAAKI,SAGpB,4BACI,+CACKP,EAAMG,KAAKK,cAGpB,4BACI,gDACKR,EAAMG,KAAKM,eAGpB,4BACI,gDACKT,EAAMG,KAAKO,sBC2BpC,IAOeC,eAPS,SAAAC,GACtB,MAAO,CACLC,KAAMD,KAKKD,EAvDf,SAAaX,GACX,IAAIc,EAWJ,OACE,sBAAKb,UAAU,YAAf,UACE,uBAAMc,SAXW,SAACC,GACpBA,EAAEC,iBACF,IAAMC,EAAWJ,EAAYK,MAC7BnB,EAAMoB,SCS0B,SAAAF,GAChC,IAAMf,EAAOe,EAASG,QAAQ,MAAO,IAErC,OADAC,EAAMF,SArBC,CACHG,KAAM,eAqBH,SAACH,EAAUI,GACd,OAAOC,MAAM,gCAAD,OAAiCtB,IACxCuB,MAAK,SAAAb,GAAI,OAAIA,EAAKc,UAClBD,MAAK,SAAAb,GACF,GAAqB,cAAjBA,EAAKe,QACL,MAAM,IAAIC,MAAM,uBAEhBC,YAAW,WACPV,EAzBI,SAACP,GACzB,MAAO,CACHU,KAAM,eACNV,KAAMA,GAsBmBkB,CAAalB,MACvB,QAIVmB,OAAM,SAAAC,GAAG,OAAIb,EAtBf,CACHG,KAAM,sBDJKW,CAAqBhB,IACpCJ,EAAYK,MAAQ,GACpBgB,QAAQC,IAAIlB,IAMoBjB,UAAU,OAAxC,UACE,oBAAIA,UAAU,QAAd,mCACA,uBACEsB,KAAK,OACLc,YAAY,wBACZC,UAAQ,EACRC,IAAK,SAAAC,GAAK,OAAK1B,EAAc0B,KAE/B,wBAAQvC,UAAU,SAAlB,uBAIDD,EAAMa,KAAK4B,WACR,qBAAKxC,UAAU,qBACf,KAIHD,EAAMa,KAAK6B,QACR,oBAAIzC,UAAU,QAAd,kCACA,MAKwB,IAA3BD,EAAMa,KAAK8B,YACR,cAAC,EAAD,CAAUxC,KAAMH,EAAMa,KAAK+B,WAC3B,W,OEhDJC,EAAe,CACjBD,SAAS,GACTH,YAAY,EACZC,SAAS,EACTC,aAAa,GA+BFG,EA5BM,WAAmC,IAAlClC,EAAiC,uDAAzBiC,EAAcE,EAAW,uCACnD,OAAOA,EAAOxB,MACV,IAAK,aACD,OAAOyB,OAAOC,OAAO,GAAIrC,EAAO,CAC5B6B,YAAY,EACZG,SAAU,GACVF,SAAS,EACTC,aAAa,IAErB,IAAK,eACD,OAAOK,OAAOC,OAAO,GAAIrC,EAAO,CAC5BgC,SAAUG,EAAOlC,KACjB4B,YAAY,EACZC,SAAS,EACTC,aAAa,IAErB,IAAK,gBACD,OAAOK,OAAOC,OAAO,GAAIrC,EAAO,CAC5B8B,SAAS,EACTE,SAAU,GACVH,YAAY,EACZE,aAAa,IAErB,QACI,OAAO/B,I,QCvBbU,EAAQ4B,YAAYJ,EAAcK,YAAgBC,MACzC9B,cAEf+B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUjC,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJkC,SAASC,eAAe,W","file":"static/js/main.371f5483.chunk.js","sourcesContent":["const UserInfo = (props) => {\r\n\r\n    // console.log(props);\r\n\r\n    return(\r\n        <div className=\"user-info\">\r\n            <div className=\"avatar\">\r\n                <img src={props.user.avatar_url} alt=\"avatar\"/>\r\n            </div>\r\n            <div className=\"content\">\r\n                <h1>{props.user.name}</h1>\r\n                <p>\r\n                    <strong>Bio: \r\n                        {props.user.bio}\r\n                    </strong>\r\n                </p>\r\n                <p>\r\n                    <strong>location: \r\n                        {props.user.location}\r\n                    </strong>\r\n                </p>\r\n                <p>\r\n                    <strong>followers: \r\n                        {props.user.followers}\r\n                    </strong>\r\n                </p>\r\n                <p>\r\n                    <strong>following: \r\n                        {props.user.following}\r\n                    </strong>\r\n                </p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserInfo;","import React from 'react'\nimport './App.css';\nimport { connect } from 'react-redux';\nimport { thunk_action_creator } from './actions/index';\nimport UserInfo from './UserInfo';\n\n\nfunction App(props) {\n  let getUsername;\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const username = getUsername.value;\n    props.dispatch(thunk_action_creator(username))\n    getUsername.value = \"\";\n    console.log(username);\n  }\n  \n\n  return (\n    <div className=\"container\">\n      <form onSubmit={handleSubmit} className=\"form\">\n        <h2 className=\"title\">Github Search Profile</h2>\n        <input \n          type=\"text\" \n          placeholder=\"Enter github username\"\n          required\n          ref={input => (getUsername = input)}\n        />\n        <button className=\"button\">Submit</button>\n      </form>\n        \n      {/* fetching */}\n      {props.data.isFetching \n        ? <div className=\"fetching_loading\"></div> \n        : null\n      }\n\n      {/* error */}\n      {props.data.isError \n        ? <h3 className=\"error\">No such user exists.</h3>   \n        : null\n      }\n\n\n      {/* receive data */}\n      {props.data.receiveData === true\n        ? <UserInfo user={props.data.userData} />\n        : null\n      }\n    </div>\n  );\n}\n\n//! map state to props\nconst mapStateToProps = state => {\n  return {\n    data: state  \n  }\n}\n\n// export and connect\nexport default connect(mapStateToProps)(App);\n","import store from '../index';\r\n\r\nexport const fetch_post = () => {\r\n    return {\r\n        type: \"FETCH_USER\"\r\n    }\r\n}\r\n\r\nexport const receive_post = (data) => {\r\n    return {\r\n        type: \"FETCHED_USER\", \r\n        data: data\r\n    }\r\n}\r\n\r\nexport const receive_error = () => {\r\n    return {\r\n        type: \"RECEIVE_ERROR\"\r\n    }\r\n}\r\n\r\n\r\nexport const thunk_action_creator = username => {\r\n    const user = username.replace(/\\s/g, \"\");\r\n    store.dispatch(fetch_post());\r\n    return (dispatch, getState) => {\r\n        return fetch(`https://api.github.com/users/${user}`)\r\n            .then(data => data.json())\r\n            .then(data => {\r\n                if (data.message === \"Not Found\") {\r\n                    throw new Error(\"No such user found!\");\r\n                } else{\r\n                    setTimeout(() => {\r\n                        dispatch(receive_post(data))\r\n                    }, 650)\r\n                    // console.log(data);\r\n                } \r\n            })\r\n            .catch(err => dispatch(receive_error()))\r\n    }\r\n}","const initialstate = {\r\n    userData:{},\r\n    isFetching: false,\r\n    isError: false,\r\n    receiveData: false\r\n}\r\n\r\nconst asyncReducer = (state = initialstate, action) => {\r\n    switch(action.type) {\r\n        case \"FETCH_USER\":\r\n            return Object.assign({}, state, {\r\n                isFetching: true,\r\n                userData: {}, \r\n                isError: false,\r\n                receiveData: false\r\n            })\r\n        case \"FETCHED_USER\":\r\n            return Object.assign({}, state, {\r\n                userData: action.data, \r\n                isFetching: false,\r\n                isError: false,\r\n                receiveData: true\r\n            })\r\n        case \"RECEIVE_ERROR\":\r\n            return Object.assign({}, state, {\r\n                isError: true,\r\n                userData: {},\r\n                isFetching: false,\r\n                receiveData: false\r\n            })\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default asyncReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { createStore, applyMiddleware } from 'redux';\nimport asyncReducer from './reducers';\nimport thunk from 'redux-thunk';\nimport { Provider } from 'react-redux';\n\nconst store = createStore(asyncReducer, applyMiddleware(thunk));\nexport default store;\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App/>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}